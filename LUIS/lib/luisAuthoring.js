"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = require("ms-rest-js");
const Models = require("./models");
exports.LuisAuthoringModels = Models;
const Mappers = require("./models/mappers");
exports.LuisAuthoringMappers = Mappers;
const operations = require("./operations");
const packageName = "luis-apis";
const packageVersion = "4.0.0";
class LuisAuthoring extends msRest.ServiceClient {
    /**
     * @class
     * Initializes a new instance of the LuisAuthoring class.
     * @constructor
     *
     * @param {string} authoringKey - Subscription credentials which uniquely identify client subscription.
     *
     * @param {object} [options] - The parameter options
     *
     * @param {Array} [options.filters] - Filters to be added to the request pipeline
     *
     * @param {object} [options.requestOptions] - The request options. Detailed info can be found at
     * {@link https://github.github.io/fetch/#Request Options doc}
     *
     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
     *
     */
    constructor(authoringKey, options) {
        let credentials = new msRest.ApiKeyCredentials({ inHeader: { "Ocp-Apim-Subscription-Key": authoringKey } });
        if (!options)
            options = {};
        super(credentials, options);
        this.baseUri = 'https://{AzureRegion}.api.cognitive.microsoft.com/luis/api/v2.0';
        this.credentials = credentials;
        this.addUserAgentInfo(`${packageName}/${packageVersion}`);
        this.features = new operations.Features(this);
        this.examples = new operations.Examples(this);
        this.model = new operations.Model(this);
        this.apps = new operations.Apps(this);
        this.versions = new operations.Versions(this);
        this.train = new operations.Train(this);
        this.permissions = new operations.Permissions(this);
        this.pattern = new operations.Pattern(this);
        this.serializer = new msRest.Serializer(Mappers);
    }
}
exports.LuisAuthoring = LuisAuthoring;
//# sourceMappingURL=luisAuthoring.js.map