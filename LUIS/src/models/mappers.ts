/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const EntityLabelObject = {
  serializedName: "EntityLabelObject",
  type: {
    name: "Composite",
    className: "EntityLabelObject",
    modelProperties: {
      entityName: {
        required: true,
        serializedName: "entityName",
        type: {
          name: "String"
        }
      },
      startCharIndex: {
        required: true,
        serializedName: "startCharIndex",
        type: {
          name: "Number"
        }
      },
      endCharIndex: {
        required: true,
        serializedName: "endCharIndex",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationCreateObject = {
  serializedName: "ApplicationCreateObject",
  type: {
    name: "Composite",
    className: "ApplicationCreateObject",
    modelProperties: {
      culture: {
        required: true,
        serializedName: "culture",
        type: {
          name: "String"
        }
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      initialVersionId: {
        serializedName: "initialVersionId",
        type: {
          name: "String"
        }
      },
      usageScenario: {
        serializedName: "usageScenario",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrebuiltDomainCreateBaseObject = {
  serializedName: "PrebuiltDomainCreateBaseObject",
  type: {
    name: "Composite",
    className: "PrebuiltDomainCreateBaseObject",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrebuiltDomainCreateObject = {
  serializedName: "PrebuiltDomainCreateObject",
  type: {
    name: "Composite",
    className: "PrebuiltDomainCreateObject",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      culture: {
        serializedName: "culture",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrebuiltDomainModelCreateObject = {
  serializedName: "PrebuiltDomainModelCreateObject",
  type: {
    name: "Composite",
    className: "PrebuiltDomainModelCreateObject",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      modelName: {
        serializedName: "modelName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HierarchicalEntityModel = {
  serializedName: "HierarchicalEntityModel",
  type: {
    name: "Composite",
    className: "HierarchicalEntityModel",
    modelProperties: {
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CompositeEntityModel = {
  serializedName: "CompositeEntityModel",
  type: {
    name: "Composite",
    className: "CompositeEntityModel",
    modelProperties: {
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JSONEntity = {
  serializedName: "JSONEntity",
  type: {
    name: "Composite",
    className: "JSONEntity",
    modelProperties: {
      startPos: {
        required: true,
        serializedName: "startPos",
        type: {
          name: "Number"
        }
      },
      endPos: {
        required: true,
        serializedName: "endPos",
        type: {
          name: "Number"
        }
      },
      entity: {
        required: true,
        serializedName: "entity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationSettingUpdateObject = {
  serializedName: "ApplicationSettingUpdateObject",
  type: {
    name: "Composite",
    className: "ApplicationSettingUpdateObject",
    modelProperties: {
      publicProperty: {
        serializedName: "public",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PublishSettingUpdateObject = {
  serializedName: "PublishSettingUpdateObject",
  type: {
    name: "Composite",
    className: "PublishSettingUpdateObject",
    modelProperties: {
      sentimentAnalysis: {
        serializedName: "sentimentAnalysis",
        type: {
          name: "Boolean"
        }
      },
      speech: {
        serializedName: "speech",
        type: {
          name: "Boolean"
        }
      },
      spellChecker: {
        serializedName: "spellChecker",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ExampleLabelObject = {
  serializedName: "ExampleLabelObject",
  type: {
    name: "Composite",
    className: "ExampleLabelObject",
    modelProperties: {
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      entityLabels: {
        serializedName: "entityLabels",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityLabelObjectElementType",
            type: {
              name: "Composite",
              className: "EntityLabelObject"
            }
          }
        }
      },
      intentName: {
        serializedName: "intentName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhraselistCreateObject = {
  serializedName: "PhraselistCreateObject",
  type: {
    name: "Composite",
    className: "PhraselistCreateObject",
    modelProperties: {
      phrases: {
        serializedName: "phrases",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isExchangeable: {
        serializedName: "isExchangeable",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SubClosedList = {
  serializedName: "SubClosedList",
  type: {
    name: "Composite",
    className: "SubClosedList",
    modelProperties: {
      canonicalForm: {
        serializedName: "canonicalForm",
        type: {
          name: "String"
        }
      },
      list: {
        serializedName: "list",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SubClosedListResponse = {
  serializedName: "SubClosedListResponse",
  type: {
    name: "Composite",
    className: "SubClosedListResponse",
    modelProperties: {
      ...SubClosedList.type.modelProperties,
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationUpdateObject = {
  serializedName: "ApplicationUpdateObject",
  type: {
    name: "Composite",
    className: "ApplicationUpdateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JSONRegexFeature = {
  serializedName: "JSONRegexFeature",
  type: {
    name: "Composite",
    className: "JSONRegexFeature",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      activated: {
        serializedName: "activated",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternUpdateObject = {
  serializedName: "PatternUpdateObject",
  type: {
    name: "Composite",
    className: "PatternUpdateObject",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "isActive",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ClosedList = {
  serializedName: "ClosedList",
  type: {
    name: "Composite",
    className: "ClosedList",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      subLists: {
        serializedName: "subLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "SubClosedListElementType",
            type: {
              name: "Composite",
              className: "SubClosedList"
            }
          }
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WordListObject = {
  serializedName: "WordListObject",
  type: {
    name: "Composite",
    className: "WordListObject",
    modelProperties: {
      canonicalForm: {
        serializedName: "canonicalForm",
        type: {
          name: "String"
        }
      },
      list: {
        serializedName: "list",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ClosedListModelPatchObject = {
  serializedName: "ClosedListModelPatchObject",
  type: {
    name: "Composite",
    className: "ClosedListModelPatchObject",
    modelProperties: {
      subLists: {
        serializedName: "subLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "WordListObjectElementType",
            type: {
              name: "Composite",
              className: "WordListObject"
            }
          }
        }
      }
    }
  }
};

export const JSONModelFeature = {
  serializedName: "JSONModelFeature",
  type: {
    name: "Composite",
    className: "JSONModelFeature",
    modelProperties: {
      activated: {
        serializedName: "activated",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      words: {
        serializedName: "words",
        type: {
          name: "String"
        }
      },
      mode: {
        serializedName: "mode",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ModelCreateObject = {
  serializedName: "ModelCreateObject",
  type: {
    name: "Composite",
    className: "ModelCreateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternCreateObject = {
  serializedName: "PatternCreateObject",
  type: {
    name: "Composite",
    className: "PatternCreateObject",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WordListBaseUpdateObject = {
  serializedName: "WordListBaseUpdateObject",
  type: {
    name: "Composite",
    className: "WordListBaseUpdateObject",
    modelProperties: {
      canonicalForm: {
        serializedName: "canonicalForm",
        type: {
          name: "String"
        }
      },
      list: {
        serializedName: "list",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const JSONUtterance = {
  serializedName: "JSONUtterance",
  type: {
    name: "Composite",
    className: "JSONUtterance",
    modelProperties: {
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      intent: {
        serializedName: "intent",
        type: {
          name: "String"
        }
      },
      entities: {
        serializedName: "entities",
        type: {
          name: "Sequence",
          element: {
            serializedName: "JSONEntityElementType",
            type: {
              name: "Composite",
              className: "JSONEntity"
            }
          }
        }
      }
    }
  }
};

export const ModelUpdateObject = {
  serializedName: "ModelUpdateObject",
  type: {
    name: "Composite",
    className: "ModelUpdateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClosedListModelUpdateObject = {
  serializedName: "ClosedListModelUpdateObject",
  type: {
    name: "Composite",
    className: "ClosedListModelUpdateObject",
    modelProperties: {
      subLists: {
        serializedName: "subLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "WordListObjectElementType",
            type: {
              name: "Composite",
              className: "WordListObject"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClosedListModelCreateObject = {
  serializedName: "ClosedListModelCreateObject",
  type: {
    name: "Composite",
    className: "ClosedListModelCreateObject",
    modelProperties: {
      subLists: {
        serializedName: "subLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "WordListObjectElementType",
            type: {
              name: "Composite",
              className: "WordListObject"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VersionInfo = {
  serializedName: "VersionInfo",
  type: {
    name: "Composite",
    className: "VersionInfo",
    modelProperties: {
      version: {
        required: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedDateTime: {
        serializedName: "lastModifiedDateTime",
        type: {
          name: "DateTime"
        }
      },
      lastTrainedDateTime: {
        serializedName: "lastTrainedDateTime",
        type: {
          name: "DateTime"
        }
      },
      lastPublishedDateTime: {
        serializedName: "lastPublishedDateTime",
        type: {
          name: "DateTime"
        }
      },
      endpointUrl: {
        serializedName: "endpointUrl",
        type: {
          name: "String"
        }
      },
      assignedEndpointKey: {
        serializedName: "assignedEndpointKey",
        type: {
          name: "Dictionary",
          value: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      externalApiKeys: {
        serializedName: "externalApiKeys",
        type: {
          name: "Object"
        }
      },
      intentsCount: {
        serializedName: "intentsCount",
        type: {
          name: "Number"
        }
      },
      entitiesCount: {
        serializedName: "entitiesCount",
        type: {
          name: "Number"
        }
      },
      endpointHitsCount: {
        serializedName: "endpointHitsCount",
        type: {
          name: "Number"
        }
      },
      trainingStatus: {
        required: true,
        serializedName: "trainingStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "NeedsTraining",
            "InProgress",
            "Trained"
          ]
        }
      }
    }
  }
};

export const TaskUpdateObject = {
  serializedName: "TaskUpdateObject",
  type: {
    name: "Composite",
    className: "TaskUpdateObject",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhraselistUpdateObject = {
  serializedName: "PhraselistUpdateObject",
  type: {
    name: "Composite",
    className: "PhraselistUpdateObject",
    modelProperties: {
      phrases: {
        serializedName: "phrases",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "isActive",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      isExchangeable: {
        serializedName: "isExchangeable",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PrebuiltDomainObject = {
  serializedName: "PrebuiltDomainObject",
  type: {
    name: "Composite",
    className: "PrebuiltDomainObject",
    modelProperties: {
      domainName: {
        serializedName: "domain_name",
        type: {
          name: "String"
        }
      },
      modelName: {
        serializedName: "model_name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HierarchicalModel = {
  serializedName: "HierarchicalModel",
  type: {
    name: "Composite",
    className: "HierarchicalModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      inherits: {
        serializedName: "inherits",
        type: {
          name: "Composite",
          className: "PrebuiltDomainObject"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApplicationPublishObject = {
  serializedName: "ApplicationPublishObject",
  type: {
    name: "Composite",
    className: "ApplicationPublishObject",
    modelProperties: {
      versionId: {
        serializedName: "versionId",
        type: {
          name: "String"
        }
      },
      isStaging: {
        serializedName: "isStaging",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternAny = {
  serializedName: "PatternAny",
  type: {
    name: "Composite",
    className: "PatternAny",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      explicitList: {
        serializedName: "explicitList",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RegexEntity = {
  serializedName: "RegexEntity",
  type: {
    name: "Composite",
    className: "RegexEntity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      regexPattern: {
        serializedName: "regexPattern",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrebuiltEntity = {
  serializedName: "PrebuiltEntity",
  type: {
    name: "Composite",
    className: "PrebuiltEntity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PatternRule = {
  serializedName: "PatternRule",
  type: {
    name: "Composite",
    className: "PatternRule",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      intent: {
        serializedName: "intent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LuisApp = {
  serializedName: "LuisApp",
  type: {
    name: "Composite",
    className: "LuisApp",
    modelProperties: {
      additionalProperties: {
        type: {
          name: "Dictionary",
          value: {
            serializedName: "ObjectElementType",
            type: {
              name: "Object"
            }
          }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      versionId: {
        serializedName: "versionId",
        type: {
          name: "String"
        }
      },
      desc: {
        serializedName: "desc",
        type: {
          name: "String"
        }
      },
      culture: {
        serializedName: "culture",
        type: {
          name: "String"
        }
      },
      intents: {
        serializedName: "intents",
        type: {
          name: "Sequence",
          element: {
            serializedName: "HierarchicalModelElementType",
            type: {
              name: "Composite",
              className: "HierarchicalModel"
            }
          }
        }
      },
      entities: {
        serializedName: "entities",
        type: {
          name: "Sequence",
          element: {
            serializedName: "HierarchicalModelElementType",
            type: {
              name: "Composite",
              className: "HierarchicalModel"
            }
          }
        }
      },
      closedLists: {
        serializedName: "closedLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ClosedListElementType",
            type: {
              name: "Composite",
              className: "ClosedList"
            }
          }
        }
      },
      composites: {
        serializedName: "composites",
        type: {
          name: "Sequence",
          element: {
            serializedName: "HierarchicalModelElementType",
            type: {
              name: "Composite",
              className: "HierarchicalModel"
            }
          }
        }
      },
      patternAnyEntities: {
        serializedName: "patternAnyEntities",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PatternAnyElementType",
            type: {
              name: "Composite",
              className: "PatternAny"
            }
          }
        }
      },
      regexEntities: {
        serializedName: "regex_entities",
        type: {
          name: "Sequence",
          element: {
            serializedName: "RegexEntityElementType",
            type: {
              name: "Composite",
              className: "RegexEntity"
            }
          }
        }
      },
      prebuiltEntities: {
        serializedName: "prebuiltEntities",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PrebuiltEntityElementType",
            type: {
              name: "Composite",
              className: "PrebuiltEntity"
            }
          }
        }
      },
      regexFeatures: {
        serializedName: "regex_features",
        type: {
          name: "Sequence",
          element: {
            serializedName: "JSONRegexFeatureElementType",
            type: {
              name: "Composite",
              className: "JSONRegexFeature"
            }
          }
        }
      },
      modelFeatures: {
        serializedName: "model_features",
        type: {
          name: "Sequence",
          element: {
            serializedName: "JSONModelFeatureElementType",
            type: {
              name: "Composite",
              className: "JSONModelFeature"
            }
          }
        }
      },
      patterns: {
        serializedName: "patterns",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PatternRuleElementType",
            type: {
              name: "Composite",
              className: "PatternRule"
            }
          }
        }
      },
      utterances: {
        serializedName: "utterances",
        type: {
          name: "Sequence",
          element: {
            serializedName: "JSONUtteranceElementType",
            type: {
              name: "Composite",
              className: "JSONUtterance"
            }
          }
        }
      }
    }
  }
};

export const EntityLabel = {
  serializedName: "EntityLabel",
  type: {
    name: "Composite",
    className: "EntityLabel",
    modelProperties: {
      entityName: {
        required: true,
        serializedName: "entityName",
        type: {
          name: "String"
        }
      },
      startTokenIndex: {
        required: true,
        serializedName: "startTokenIndex",
        type: {
          name: "Number"
        }
      },
      endTokenIndex: {
        required: true,
        serializedName: "endTokenIndex",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IntentPrediction = {
  serializedName: "IntentPrediction",
  type: {
    name: "Composite",
    className: "IntentPrediction",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      score: {
        serializedName: "score",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EntityPrediction = {
  serializedName: "EntityPrediction",
  type: {
    name: "Composite",
    className: "EntityPrediction",
    modelProperties: {
      entityName: {
        required: true,
        serializedName: "entityName",
        type: {
          name: "String"
        }
      },
      startTokenIndex: {
        required: true,
        serializedName: "startTokenIndex",
        type: {
          name: "Number"
        }
      },
      endTokenIndex: {
        required: true,
        serializedName: "endTokenIndex",
        type: {
          name: "Number"
        }
      },
      phrase: {
        required: true,
        serializedName: "phrase",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabeledUtterance = {
  serializedName: "LabeledUtterance",
  type: {
    name: "Composite",
    className: "LabeledUtterance",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      tokenizedText: {
        serializedName: "tokenizedText",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      intentLabel: {
        serializedName: "intentLabel",
        type: {
          name: "String"
        }
      },
      entityLabels: {
        serializedName: "entityLabels",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityLabelElementType",
            type: {
              name: "Composite",
              className: "EntityLabel"
            }
          }
        }
      },
      intentPredictions: {
        serializedName: "intentPredictions",
        type: {
          name: "Sequence",
          element: {
            serializedName: "IntentPredictionElementType",
            type: {
              name: "Composite",
              className: "IntentPrediction"
            }
          }
        }
      },
      entityPredictions: {
        serializedName: "entityPredictions",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityPredictionElementType",
            type: {
              name: "Composite",
              className: "EntityPrediction"
            }
          }
        }
      }
    }
  }
};

export const IntentsSuggestionExample = {
  serializedName: "IntentsSuggestionExample",
  type: {
    name: "Composite",
    className: "IntentsSuggestionExample",
    modelProperties: {
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      tokenizedText: {
        serializedName: "tokenizedText",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      intentPredictions: {
        serializedName: "intentPredictions",
        type: {
          name: "Sequence",
          element: {
            serializedName: "IntentPredictionElementType",
            type: {
              name: "Composite",
              className: "IntentPrediction"
            }
          }
        }
      },
      entityPredictions: {
        serializedName: "entityPredictions",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityPredictionElementType",
            type: {
              name: "Composite",
              className: "EntityPrediction"
            }
          }
        }
      }
    }
  }
};

export const EntitiesSuggestionExample = {
  serializedName: "EntitiesSuggestionExample",
  type: {
    name: "Composite",
    className: "EntitiesSuggestionExample",
    modelProperties: {
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      tokenizedText: {
        serializedName: "tokenizedText",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      intentPredictions: {
        serializedName: "intentPredictions",
        type: {
          name: "Sequence",
          element: {
            serializedName: "IntentPredictionElementType",
            type: {
              name: "Composite",
              className: "IntentPrediction"
            }
          }
        }
      },
      entityPredictions: {
        serializedName: "entityPredictions",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityPredictionElementType",
            type: {
              name: "Composite",
              className: "EntityPrediction"
            }
          }
        }
      }
    }
  }
};

export const PersonalAssistantsResponse = {
  serializedName: "PersonalAssistantsResponse",
  type: {
    name: "Composite",
    className: "PersonalAssistantsResponse",
    modelProperties: {
      endpointKeys: {
        serializedName: "endpointKeys",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "Uuid"
            }
          }
        }
      },
      endpointUrls: {
        serializedName: "endpointUrls",
        type: {
          name: "Dictionary",
          value: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ModelInfo = {
  serializedName: "ModelInfo",
  type: {
    name: "Composite",
    className: "ModelInfo",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityRole = {
  serializedName: "EntityRole",
  type: {
    name: "Composite",
    className: "EntityRole",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChildEntity = {
  serializedName: "ChildEntity",
  type: {
    name: "Composite",
    className: "ChildEntity",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExplicitListItem = {
  serializedName: "ExplicitListItem",
  type: {
    name: "Composite",
    className: "ExplicitListItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      explicitListItem: {
        serializedName: "explicitListItem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelInfoResponse = {
  serializedName: "ModelInfoResponse",
  type: {
    name: "Composite",
    className: "ModelInfoResponse",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ChildEntityElementType",
            type: {
              name: "Composite",
              className: "ChildEntity"
            }
          }
        }
      },
      subLists: {
        serializedName: "subLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "SubClosedListResponseElementType",
            type: {
              name: "Composite",
              className: "SubClosedListResponse"
            }
          }
        }
      },
      customPrebuiltDomainName: {
        serializedName: "customPrebuiltDomainName",
        type: {
          name: "String"
        }
      },
      customPrebuiltModelName: {
        serializedName: "customPrebuiltModelName",
        type: {
          name: "String"
        }
      },
      regexPattern: {
        serializedName: "regexPattern",
        type: {
          name: "String"
        }
      },
      explicitList: {
        serializedName: "explicitList",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ExplicitListItemElementType",
            type: {
              name: "Composite",
              className: "ExplicitListItem"
            }
          }
        }
      }
    }
  }
};

export const EntityModelInfo = {
  serializedName: "EntityModelInfo",
  type: {
    name: "Composite",
    className: "EntityModelInfo",
    modelProperties: {
      ...ModelInfo.type.modelProperties,
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      }
    }
  }
};

export const HierarchicalEntityExtractor = {
  serializedName: "Hierarchical Entity Extractor",
  type: {
    name: "Composite",
    className: "HierarchicalEntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ChildEntityElementType",
            type: {
              name: "Composite",
              className: "ChildEntity"
            }
          }
        }
      }
    }
  }
};

export const CompositeEntityExtractor = {
  serializedName: "Composite Entity Extractor",
  type: {
    name: "Composite",
    className: "CompositeEntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ChildEntityElementType",
            type: {
              name: "Composite",
              className: "ChildEntity"
            }
          }
        }
      }
    }
  }
};

export const ClosedListEntityExtractor = {
  serializedName: "Closed List Entity Extractor",
  type: {
    name: "Composite",
    className: "ClosedListEntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      subLists: {
        serializedName: "subLists",
        type: {
          name: "Sequence",
          element: {
            serializedName: "SubClosedListResponseElementType",
            type: {
              name: "Composite",
              className: "SubClosedListResponse"
            }
          }
        }
      }
    }
  }
};

export const PrebuiltEntityExtractor = {
  serializedName: "Prebuilt Entity Extractor",
  type: {
    name: "Composite",
    className: "PrebuiltEntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      }
    }
  }
};

export const HierarchicalChildEntity = {
  serializedName: "HierarchicalChildEntity",
  type: {
    name: "Composite",
    className: "HierarchicalChildEntity",
    modelProperties: {
      ...ChildEntity.type.modelProperties,
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        serializedName: "readableType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomPrebuiltModel = {
  serializedName: "CustomPrebuiltModel",
  type: {
    name: "Composite",
    className: "CustomPrebuiltModel",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      customPrebuiltDomainName: {
        serializedName: "customPrebuiltDomainName",
        type: {
          name: "String"
        }
      },
      customPrebuiltModelName: {
        serializedName: "customPrebuiltModelName",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      }
    }
  }
};

export const IntentClassifier = {
  serializedName: "Intent Classifier",
  type: {
    name: "Composite",
    className: "IntentClassifier",
    modelProperties: {
      ...ModelInfo.type.modelProperties,
      customPrebuiltDomainName: {
        serializedName: "customPrebuiltDomainName",
        type: {
          name: "String"
        }
      },
      customPrebuiltModelName: {
        serializedName: "customPrebuiltModelName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityExtractor = {
  serializedName: "Entity Extractor",
  type: {
    name: "Composite",
    className: "EntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      customPrebuiltDomainName: {
        serializedName: "customPrebuiltDomainName",
        type: {
          name: "String"
        }
      },
      customPrebuiltModelName: {
        serializedName: "customPrebuiltModelName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeatureInfoObject = {
  serializedName: "FeatureInfoObject",
  type: {
    name: "Composite",
    className: "FeatureInfoObject",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PhraseListFeatureInfo = {
  serializedName: "PhraseListFeatureInfo",
  type: {
    name: "Composite",
    className: "PhraseListFeatureInfo",
    modelProperties: {
      ...FeatureInfoObject.type.modelProperties,
      phrases: {
        serializedName: "phrases",
        type: {
          name: "String"
        }
      },
      isExchangeable: {
        serializedName: "isExchangeable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PatternFeatureInfo = {
  serializedName: "PatternFeatureInfo",
  type: {
    name: "Composite",
    className: "PatternFeatureInfo",
    modelProperties: {
      ...FeatureInfoObject.type.modelProperties,
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeaturesResponseObject = {
  serializedName: "FeaturesResponseObject",
  type: {
    name: "Composite",
    className: "FeaturesResponseObject",
    modelProperties: {
      phraselistFeatures: {
        serializedName: "phraselistFeatures",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PhraseListFeatureInfoElementType",
            type: {
              name: "Composite",
              className: "PhraseListFeatureInfo"
            }
          }
        }
      },
      patternFeatures: {
        serializedName: "patternFeatures",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PatternFeatureInfoElementType",
            type: {
              name: "Composite",
              className: "PatternFeatureInfo"
            }
          }
        }
      }
    }
  }
};

export const LabelExampleResponse = {
  serializedName: "LabelExampleResponse",
  type: {
    name: "Composite",
    className: "LabelExampleResponse",
    modelProperties: {
      utteranceText: {
        serializedName: "UtteranceText",
        type: {
          name: "String"
        }
      },
      exampleId: {
        serializedName: "ExampleId",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OperationStatus = {
  serializedName: "OperationStatus",
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BatchLabelExample = {
  serializedName: "BatchLabelExample",
  type: {
    name: "Composite",
    className: "BatchLabelExample",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "LabelExampleResponse"
        }
      },
      hasError: {
        serializedName: "hasError",
        type: {
          name: "Boolean"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationStatus"
        }
      }
    }
  }
};

export const ApplicationInfoResponse = {
  serializedName: "ApplicationInfoResponse",
  type: {
    name: "Composite",
    className: "ApplicationInfoResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      culture: {
        serializedName: "culture",
        type: {
          name: "String"
        }
      },
      usageScenario: {
        serializedName: "usageScenario",
        type: {
          name: "String"
        }
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      versionsCount: {
        serializedName: "versionsCount",
        type: {
          name: "Number"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        type: {
          name: "String"
        }
      },
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Object"
        }
      },
      endpointHitsCount: {
        serializedName: "endpointHitsCount",
        type: {
          name: "Number"
        }
      },
      activeVersion: {
        serializedName: "activeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EndpointInfo = {
  serializedName: "EndpointInfo",
  type: {
    name: "Composite",
    className: "EndpointInfo",
    modelProperties: {
      versionId: {
        serializedName: "versionId",
        type: {
          name: "String"
        }
      },
      isStaging: {
        serializedName: "isStaging",
        type: {
          name: "Boolean"
        }
      },
      endpointUrl: {
        serializedName: "endpointUrl",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      assignedEndpointKey: {
        serializedName: "assignedEndpointKey",
        type: {
          name: "String"
        }
      },
      endpointRegion: {
        serializedName: "endpointRegion",
        type: {
          name: "String"
        }
      },
      publishedDateTime: {
        serializedName: "publishedDateTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductionOrStagingEndpointInfo = {
  serializedName: "ProductionOrStagingEndpointInfo",
  type: {
    name: "Composite",
    className: "ProductionOrStagingEndpointInfo",
    modelProperties: {
      ...EndpointInfo.type.modelProperties
    }
  }
};

export const AvailableCulture = {
  serializedName: "AvailableCulture",
  type: {
    name: "Composite",
    className: "AvailableCulture",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationSettings = {
  serializedName: "ApplicationSettings",
  type: {
    name: "Composite",
    className: "ApplicationSettings",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      isPublic: {
        required: true,
        serializedName: "public",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PublishSettings = {
  serializedName: "PublishSettings",
  type: {
    name: "Composite",
    className: "PublishSettings",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      isSentimentAnalysisEnabled: {
        required: true,
        serializedName: "sentimentAnalysis",
        type: {
          name: "Boolean"
        }
      },
      isSpeechEnabled: {
        required: true,
        serializedName: "speech",
        type: {
          name: "Boolean"
        }
      },
      isSpellCheckerEnabled: {
        required: true,
        serializedName: "spellChecker",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AvailablePrebuiltEntityModel = {
  serializedName: "AvailablePrebuiltEntityModel",
  type: {
    name: "Composite",
    className: "AvailablePrebuiltEntityModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      examples: {
        serializedName: "examples",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnqueueTrainingResponse = {
  serializedName: "EnqueueTrainingResponse",
  type: {
    name: "Composite",
    className: "EnqueueTrainingResponse",
    modelProperties: {
      statusId: {
        serializedName: "statusId",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelTrainingDetails = {
  serializedName: "ModelTrainingDetails",
  type: {
    name: "Composite",
    className: "ModelTrainingDetails",
    modelProperties: {
      statusId: {
        serializedName: "statusId",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      exampleCount: {
        serializedName: "exampleCount",
        type: {
          name: "Number"
        }
      },
      trainingDateTime: {
        serializedName: "trainingDateTime",
        type: {
          name: "DateTime"
        }
      },
      failureReason: {
        serializedName: "failureReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelTrainingInfo = {
  serializedName: "ModelTrainingInfo",
  type: {
    name: "Composite",
    className: "ModelTrainingInfo",
    modelProperties: {
      modelId: {
        serializedName: "modelId",
        type: {
          name: "Uuid"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "ModelTrainingDetails"
        }
      }
    }
  }
};

export const UserAccessList = {
  serializedName: "UserAccessList",
  type: {
    name: "Composite",
    className: "UserAccessList",
    modelProperties: {
      owner: {
        serializedName: "owner",
        type: {
          name: "String"
        }
      },
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UserCollaborator = {
  serializedName: "UserCollaborator",
  type: {
    name: "Composite",
    className: "UserCollaborator",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CollaboratorsArray = {
  serializedName: "CollaboratorsArray",
  type: {
    name: "Composite",
    className: "CollaboratorsArray",
    modelProperties: {
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      additionalProperties: {
        type: {
          name: "Dictionary",
          value: {
            serializedName: "ObjectElementType",
            type: {
              name: "Object"
            }
          }
        }
      },
      errorType: {
        serializedName: "errorType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationError = {
  serializedName: "OperationError",
  type: {
    name: "Composite",
    className: "OperationError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrebuiltDomainItem = {
  serializedName: "PrebuiltDomainItem",
  type: {
    name: "Composite",
    className: "PrebuiltDomainItem",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      examples: {
        serializedName: "examples",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrebuiltDomain = {
  serializedName: "PrebuiltDomain",
  type: {
    name: "Composite",
    className: "PrebuiltDomain",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      culture: {
        serializedName: "culture",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      examples: {
        serializedName: "examples",
        type: {
          name: "String"
        }
      },
      intents: {
        serializedName: "intents",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PrebuiltDomainItemElementType",
            type: {
              name: "Composite",
              className: "PrebuiltDomainItem"
            }
          }
        }
      },
      entities: {
        serializedName: "entities",
        type: {
          name: "Sequence",
          element: {
            serializedName: "PrebuiltDomainItemElementType",
            type: {
              name: "Composite",
              className: "PrebuiltDomainItem"
            }
          }
        }
      }
    }
  }
};

export const EntityRoleCreateObject = {
  serializedName: "EntityRoleCreateObject",
  type: {
    name: "Composite",
    className: "EntityRoleCreateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegexModelCreateObject = {
  serializedName: "RegexModelCreateObject",
  type: {
    name: "Composite",
    className: "RegexModelCreateObject",
    modelProperties: {
      regexPattern: {
        serializedName: "regexPattern",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternAnyModelCreateObject = {
  serializedName: "PatternAnyModelCreateObject",
  type: {
    name: "Composite",
    className: "PatternAnyModelCreateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      explicitList: {
        serializedName: "explicitList",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ExplicitListItemCreateObject = {
  serializedName: "ExplicitListItemCreateObject",
  type: {
    name: "Composite",
    className: "ExplicitListItemCreateObject",
    modelProperties: {
      explicitListItem: {
        serializedName: "explicitListItem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegexModelUpdateObject = {
  serializedName: "RegexModelUpdateObject",
  type: {
    name: "Composite",
    className: "RegexModelUpdateObject",
    modelProperties: {
      regexPattern: {
        serializedName: "regexPattern",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternAnyModelUpdateObject = {
  serializedName: "PatternAnyModelUpdateObject",
  type: {
    name: "Composite",
    className: "PatternAnyModelUpdateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      explicitList: {
        serializedName: "explicitList",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EntityRoleUpdateObject = {
  serializedName: "EntityRoleUpdateObject",
  type: {
    name: "Composite",
    className: "EntityRoleUpdateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExplicitListItemUpdateObject = {
  serializedName: "ExplicitListItemUpdateObject",
  type: {
    name: "Composite",
    className: "ExplicitListItemUpdateObject",
    modelProperties: {
      explicitListItem: {
        serializedName: "explicitListItem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternRuleCreateObject = {
  serializedName: "PatternRuleCreateObject",
  type: {
    name: "Composite",
    className: "PatternRuleCreateObject",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      intent: {
        serializedName: "intent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternRuleUpdateObject = {
  serializedName: "PatternRuleUpdateObject",
  type: {
    name: "Composite",
    className: "PatternRuleUpdateObject",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      intent: {
        serializedName: "intent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegexEntityExtractor = {
  serializedName: "Regex Entity Extractor",
  type: {
    name: "Composite",
    className: "RegexEntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      regexPattern: {
        serializedName: "regexPattern",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternAnyEntityExtractor = {
  serializedName: "Pattern.Any Entity Extractor",
  type: {
    name: "Composite",
    className: "PatternAnyEntityExtractor",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeId: {
        serializedName: "typeId",
        type: {
          name: "Number"
        }
      },
      readableType: {
        required: true,
        serializedName: "readableType",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            serializedName: "EntityRoleElementType",
            type: {
              name: "Composite",
              className: "EntityRole"
            }
          }
        }
      },
      explicitList: {
        serializedName: "explicitList",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ExplicitListItemElementType",
            type: {
              name: "Composite",
              className: "ExplicitListItem"
            }
          }
        }
      }
    }
  }
};

export const PatternRuleInfo = {
  serializedName: "PatternRuleInfo",
  type: {
    name: "Composite",
    className: "PatternRuleInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      intent: {
        serializedName: "intent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabelTextObject = {
  serializedName: "LabelTextObject",
  type: {
    name: "Composite",
    className: "LabelTextObject",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HierarchicalChildModelUpdateObject = {
  serializedName: "hierarchicalChildModelUpdateObject",
  type: {
    name: "Composite",
    className: "HierarchicalChildModelUpdateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HierarchicalChildModelCreateObject = {
  serializedName: "hierarchicalChildModelCreateObject",
  type: {
    name: "Composite",
    className: "HierarchicalChildModelCreateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CompositeChildModelCreateObject = {
  serializedName: "compositeChildModelCreateObject",
  type: {
    name: "Composite",
    className: "CompositeChildModelCreateObject",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeaturesGetApplicationVersionPatternFeaturesOptionalParams = {
  serializedName: "GetApplicationVersionPatternFeaturesOptions",
  type: {
    name: "Composite",
    className: "FeaturesGetApplicationVersionPatternFeaturesOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FeaturesListPhraseListsOptionalParams = {
  serializedName: "ListPhraseListsOptions",
  type: {
    name: "Composite",
    className: "FeaturesListPhraseListsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FeaturesListOptionalParams = {
  serializedName: "ListOptions",
  type: {
    name: "Composite",
    className: "FeaturesListOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FeaturesUpdatePhraseListOptionalParams = {
  serializedName: "UpdatePhraseListOptions",
  type: {
    name: "Composite",
    className: "FeaturesUpdatePhraseListOptionalParams",
    modelProperties: {
      phraselistUpdateObject: {
        serializedName: "phraselistUpdateObject",
        type: {
          name: "Composite",
          className: "PhraselistUpdateObject"
        }
      }
    }
  }
};

export const ExamplesListOptionalParams = {
  serializedName: "ListOptions",
  type: {
    name: "Composite",
    className: "ExamplesListOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListIntentsOptionalParams = {
  serializedName: "ListIntentsOptions",
  type: {
    name: "Composite",
    className: "ModelListIntentsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListEntitiesOptionalParams = {
  serializedName: "ListEntitiesOptions",
  type: {
    name: "Composite",
    className: "ModelListEntitiesOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListHierarchicalEntitiesOptionalParams = {
  serializedName: "ListHierarchicalEntitiesOptions",
  type: {
    name: "Composite",
    className: "ModelListHierarchicalEntitiesOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListCompositeEntitiesOptionalParams = {
  serializedName: "ListCompositeEntitiesOptions",
  type: {
    name: "Composite",
    className: "ModelListCompositeEntitiesOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListClosedListsOptionalParams = {
  serializedName: "ListClosedListsOptions",
  type: {
    name: "Composite",
    className: "ModelListClosedListsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListPrebuiltsOptionalParams = {
  serializedName: "ListPrebuiltsOptions",
  type: {
    name: "Composite",
    className: "ModelListPrebuiltsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelListModelsOptionalParams = {
  serializedName: "ListModelsOptions",
  type: {
    name: "Composite",
    className: "ModelListModelsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelExamplesMethodOptionalParams = {
  serializedName: "ExamplesMethodOptions",
  type: {
    name: "Composite",
    className: "ModelExamplesMethodOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelDeleteIntentOptionalParams = {
  serializedName: "DeleteIntentOptions",
  type: {
    name: "Composite",
    className: "ModelDeleteIntentOptionalParams",
    modelProperties: {
      deleteUtterances: {
        serializedName: "deleteUtterances",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ModelGetIntentSuggestionsOptionalParams = {
  serializedName: "GetIntentSuggestionsOptions",
  type: {
    name: "Composite",
    className: "ModelGetIntentSuggestionsOptionalParams",
    modelProperties: {
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelGetEntitySuggestionsOptionalParams = {
  serializedName: "GetEntitySuggestionsOptions",
  type: {
    name: "Composite",
    className: "ModelGetEntitySuggestionsOptionalParams",
    modelProperties: {
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelGetRegexEntityInfosOptionalParams = {
  serializedName: "GetRegexEntityInfosOptions",
  type: {
    name: "Composite",
    className: "ModelGetRegexEntityInfosOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelGetPatternAnyEntityInfosOptionalParams = {
  serializedName: "GetPatternAnyEntityInfosOptions",
  type: {
    name: "Composite",
    className: "ModelGetPatternAnyEntityInfosOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AppsListOptionalParams = {
  serializedName: "ListOptions",
  type: {
    name: "Composite",
    className: "AppsListOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AppsImportMethodOptionalParams = {
  serializedName: "ImportMethodOptions",
  type: {
    name: "Composite",
    className: "AppsImportMethodOptionalParams",
    modelProperties: {
      appName: {
        serializedName: "appName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VersionsCloneOptionalParams = {
  serializedName: "CloneOptions",
  type: {
    name: "Composite",
    className: "VersionsCloneOptionalParams",
    modelProperties: {
      versionCloneObject: {
        serializedName: "versionCloneObject",
        type: {
          name: "Composite",
          className: "TaskUpdateObject"
        }
      }
    }
  }
};

export const VersionsListOptionalParams = {
  serializedName: "ListOptions",
  type: {
    name: "Composite",
    className: "VersionsListOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VersionsImportMethodOptionalParams = {
  serializedName: "ImportMethodOptions",
  type: {
    name: "Composite",
    className: "VersionsImportMethodOptionalParams",
    modelProperties: {
      versionId: {
        serializedName: "versionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PatternGetPatternsOptionalParams = {
  serializedName: "GetPatternsOptions",
  type: {
    name: "Composite",
    className: "PatternGetPatternsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PatternGetIntentPatternsOptionalParams = {
  serializedName: "GetIntentPatternsOptions",
  type: {
    name: "Composite",
    className: "PatternGetIntentPatternsOptionalParams",
    modelProperties: {
      skip: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      take: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};
