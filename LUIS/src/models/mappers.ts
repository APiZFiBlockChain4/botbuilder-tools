/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const EntityLabelObject = {
  required: false,
  serializedName: 'EntityLabelObject',
  type: {
    name: 'Composite',
    className: 'EntityLabelObject',
    modelProperties: {
      entityName: {
        required: true,
        serializedName: 'entityName',
        type: {
          name: 'String'
        }
      },
      startCharIndex: {
        required: true,
        serializedName: 'startCharIndex',
        type: {
          name: 'Number'
        }
      },
      endCharIndex: {
        required: true,
        serializedName: 'endCharIndex',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ApplicationCreateObject = {
  required: false,
  serializedName: 'ApplicationCreateObject',
  type: {
    name: 'Composite',
    className: 'ApplicationCreateObject',
    modelProperties: {
      culture: {
        required: true,
        serializedName: 'culture',
        type: {
          name: 'String'
        }
      },
      domain: {
        required: false,
        serializedName: 'domain',
        type: {
          name: 'String'
        }
      },
      description: {
        required: false,
        serializedName: 'description',
        type: {
          name: 'String'
        }
      },
      initialVersionId: {
        required: false,
        serializedName: 'initialVersionId',
        type: {
          name: 'String'
        }
      },
      usageScenario: {
        required: false,
        serializedName: 'usageScenario',
        type: {
          name: 'String'
        }
      },
      name: {
        required: true,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PrebuiltDomainCreateBaseObject = {
  required: false,
  serializedName: 'PrebuiltDomainCreateBaseObject',
  type: {
    name: 'Composite',
    className: 'PrebuiltDomainCreateBaseObject',
    modelProperties: {
      domainName: {
        required: false,
        serializedName: 'domainName',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PrebuiltDomainCreateObject = {
  required: false,
  serializedName: 'PrebuiltDomainCreateObject',
  type: {
    name: 'Composite',
    className: 'PrebuiltDomainCreateObject',
    modelProperties: {
      domainName: {
        required: false,
        serializedName: 'domainName',
        type: {
          name: 'String'
        }
      },
      culture: {
        required: false,
        serializedName: 'culture',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PrebuiltDomainModelCreateObject = {
  required: false,
  serializedName: 'PrebuiltDomainModelCreateObject',
  type: {
    name: 'Composite',
    className: 'PrebuiltDomainModelCreateObject',
    modelProperties: {
      domainName: {
        required: false,
        serializedName: 'domainName',
        type: {
          name: 'String'
        }
      },
      modelName: {
        required: false,
        serializedName: 'modelName',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const HierarchicalEntityModel = {
  required: false,
  serializedName: 'HierarchicalEntityModel',
  type: {
    name: 'Composite',
    className: 'HierarchicalEntityModel',
    modelProperties: {
      children: {
        required: false,
        serializedName: 'children',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const CompositeEntityModel = {
  required: false,
  serializedName: 'CompositeEntityModel',
  type: {
    name: 'Composite',
    className: 'CompositeEntityModel',
    modelProperties: {
      children: {
        required: false,
        serializedName: 'children',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const JSONEntity = {
  required: false,
  serializedName: 'JSONEntity',
  type: {
    name: 'Composite',
    className: 'JSONEntity',
    modelProperties: {
      startPos: {
        required: true,
        serializedName: 'startPos',
        type: {
          name: 'Number'
        }
      },
      endPos: {
        required: true,
        serializedName: 'endPos',
        type: {
          name: 'Number'
        }
      },
      entity: {
        required: true,
        serializedName: 'entity',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ApplicationSettingUpdateObject = {
  required: false,
  serializedName: 'ApplicationSettingUpdateObject',
  type: {
    name: 'Composite',
    className: 'ApplicationSettingUpdateObject',
    modelProperties: {
      publicProperty: {
        required: false,
        serializedName: 'public',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const PublishSettingUpdateObject = {
  required: false,
  serializedName: 'PublishSettingUpdateObject',
  type: {
    name: 'Composite',
    className: 'PublishSettingUpdateObject',
    modelProperties: {
      sentimentAnalysis: {
        required: false,
        serializedName: 'sentimentAnalysis',
        type: {
          name: 'Boolean'
        }
      },
      speech: {
        required: false,
        serializedName: 'speech',
        type: {
          name: 'Boolean'
        }
      },
      spellChecker: {
        required: false,
        serializedName: 'spellChecker',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const ExampleLabelObject = {
  required: false,
  serializedName: 'ExampleLabelObject',
  type: {
    name: 'Composite',
    className: 'ExampleLabelObject',
    modelProperties: {
      text: {
        required: false,
        serializedName: 'text',
        type: {
          name: 'String'
        }
      },
      entityLabels: {
        required: false,
        serializedName: 'entityLabels',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityLabelObjectElementType',
              type: {
                name: 'Composite',
                className: 'EntityLabelObject'
              }
          }
        }
      },
      intentName: {
        required: false,
        serializedName: 'intentName',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PhraselistCreateObject = {
  required: false,
  serializedName: 'PhraselistCreateObject',
  type: {
    name: 'Composite',
    className: 'PhraselistCreateObject',
    modelProperties: {
      phrases: {
        required: false,
        serializedName: 'phrases',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      isExchangeable: {
        required: false,
        serializedName: 'isExchangeable',
        defaultValue: true,
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const SubClosedList = {
  required: false,
  serializedName: 'SubClosedList',
  type: {
    name: 'Composite',
    className: 'SubClosedList',
    modelProperties: {
      canonicalForm: {
        required: false,
        serializedName: 'canonicalForm',
        type: {
          name: 'String'
        }
      },
      list: {
        required: false,
        serializedName: 'list',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const SubClosedListResponse = {
  required: false,
  serializedName: 'SubClosedListResponse',
  type: {
    name: 'Composite',
    className: 'SubClosedListResponse',
    modelProperties: {
      canonicalForm: {
        required: false,
        serializedName: 'canonicalForm',
        type: {
          name: 'String'
        }
      },
      list: {
        required: false,
        serializedName: 'list',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ApplicationUpdateObject = {
  required: false,
  serializedName: 'ApplicationUpdateObject',
  type: {
    name: 'Composite',
    className: 'ApplicationUpdateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      description: {
        required: false,
        serializedName: 'description',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const JSONRegexFeature = {
  required: false,
  serializedName: 'JSONRegexFeature',
  type: {
    name: 'Composite',
    className: 'JSONRegexFeature',
    modelProperties: {
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      activated: {
        required: false,
        serializedName: 'activated',
        type: {
          name: 'Boolean'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternUpdateObject = {
  required: false,
  serializedName: 'PatternUpdateObject',
  type: {
    name: 'Composite',
    className: 'PatternUpdateObject',
    modelProperties: {
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      isActive: {
        required: false,
        serializedName: 'isActive',
        defaultValue: true,
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const ClosedList = {
  required: false,
  serializedName: 'ClosedList',
  type: {
    name: 'Composite',
    className: 'ClosedList',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      subLists: {
        required: false,
        serializedName: 'subLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'SubClosedListElementType',
              type: {
                name: 'Composite',
                className: 'SubClosedList'
              }
          }
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const WordListObject = {
  required: false,
  serializedName: 'WordListObject',
  type: {
    name: 'Composite',
    className: 'WordListObject',
    modelProperties: {
      canonicalForm: {
        required: false,
        serializedName: 'canonicalForm',
        type: {
          name: 'String'
        }
      },
      list: {
        required: false,
        serializedName: 'list',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const ClosedListModelPatchObject = {
  required: false,
  serializedName: 'ClosedListModelPatchObject',
  type: {
    name: 'Composite',
    className: 'ClosedListModelPatchObject',
    modelProperties: {
      subLists: {
        required: false,
        serializedName: 'subLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'WordListObjectElementType',
              type: {
                name: 'Composite',
                className: 'WordListObject'
              }
          }
        }
      }
    }
  }
};

export const JSONModelFeature = {
  required: false,
  serializedName: 'JSONModelFeature',
  type: {
    name: 'Composite',
    className: 'JSONModelFeature',
    modelProperties: {
      activated: {
        required: false,
        serializedName: 'activated',
        type: {
          name: 'Boolean'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      words: {
        required: false,
        serializedName: 'words',
        type: {
          name: 'String'
        }
      },
      mode: {
        required: false,
        serializedName: 'mode',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const ModelCreateObject = {
  required: false,
  serializedName: 'ModelCreateObject',
  type: {
    name: 'Composite',
    className: 'ModelCreateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternCreateObject = {
  required: false,
  serializedName: 'PatternCreateObject',
  type: {
    name: 'Composite',
    className: 'PatternCreateObject',
    modelProperties: {
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const WordListBaseUpdateObject = {
  required: false,
  serializedName: 'WordListBaseUpdateObject',
  type: {
    name: 'Composite',
    className: 'WordListBaseUpdateObject',
    modelProperties: {
      canonicalForm: {
        required: false,
        serializedName: 'canonicalForm',
        type: {
          name: 'String'
        }
      },
      list: {
        required: false,
        serializedName: 'list',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const JSONUtterance = {
  required: false,
  serializedName: 'JSONUtterance',
  type: {
    name: 'Composite',
    className: 'JSONUtterance',
    modelProperties: {
      text: {
        required: false,
        serializedName: 'text',
        type: {
          name: 'String'
        }
      },
      intent: {
        required: false,
        serializedName: 'intent',
        type: {
          name: 'String'
        }
      },
      entities: {
        required: false,
        serializedName: 'entities',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'JSONEntityElementType',
              type: {
                name: 'Composite',
                className: 'JSONEntity'
              }
          }
        }
      }
    }
  }
};

export const ModelUpdateObject = {
  required: false,
  serializedName: 'ModelUpdateObject',
  type: {
    name: 'Composite',
    className: 'ModelUpdateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ClosedListModelUpdateObject = {
  required: false,
  serializedName: 'ClosedListModelUpdateObject',
  type: {
    name: 'Composite',
    className: 'ClosedListModelUpdateObject',
    modelProperties: {
      subLists: {
        required: false,
        serializedName: 'subLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'WordListObjectElementType',
              type: {
                name: 'Composite',
                className: 'WordListObject'
              }
          }
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ClosedListModelCreateObject = {
  required: false,
  serializedName: 'ClosedListModelCreateObject',
  type: {
    name: 'Composite',
    className: 'ClosedListModelCreateObject',
    modelProperties: {
      subLists: {
        required: false,
        serializedName: 'subLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'WordListObjectElementType',
              type: {
                name: 'Composite',
                className: 'WordListObject'
              }
          }
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const VersionInfo = {
  required: false,
  serializedName: 'VersionInfo',
  type: {
    name: 'Composite',
    className: 'VersionInfo',
    modelProperties: {
      version: {
        required: true,
        serializedName: 'version',
        type: {
          name: 'String'
        }
      },
      createdDateTime: {
        required: false,
        serializedName: 'createdDateTime',
        type: {
          name: 'DateTime'
        }
      },
      lastModifiedDateTime: {
        required: false,
        serializedName: 'lastModifiedDateTime',
        type: {
          name: 'DateTime'
        }
      },
      lastTrainedDateTime: {
        required: false,
        serializedName: 'lastTrainedDateTime',
        type: {
          name: 'DateTime'
        }
      },
      lastPublishedDateTime: {
        required: false,
        serializedName: 'lastPublishedDateTime',
        type: {
          name: 'DateTime'
        }
      },
      endpointUrl: {
        required: false,
        serializedName: 'endpointUrl',
        type: {
          name: 'String'
        }
      },
      assignedEndpointKey: {
        required: false,
        serializedName: 'assignedEndpointKey',
        type: {
          name: 'Dictionary',
          value: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      externalApiKeys: {
        required: false,
        serializedName: 'externalApiKeys',
        type: {
          name: 'Object'
        }
      },
      intentsCount: {
        required: false,
        serializedName: 'intentsCount',
        type: {
          name: 'Number'
        }
      },
      entitiesCount: {
        required: false,
        serializedName: 'entitiesCount',
        type: {
          name: 'Number'
        }
      },
      endpointHitsCount: {
        required: false,
        serializedName: 'endpointHitsCount',
        type: {
          name: 'Number'
        }
      },
      trainingStatus: {
        required: true,
        serializedName: 'trainingStatus',
        type: {
          name: 'Enum',
          allowedValues: [ 'NeedsTraining', 'InProgress', 'Trained' ]
        }
      }
    }
  }
};

export const TaskUpdateObject = {
  required: false,
  serializedName: 'TaskUpdateObject',
  type: {
    name: 'Composite',
    className: 'TaskUpdateObject',
    modelProperties: {
      version: {
        required: false,
        serializedName: 'version',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PhraselistUpdateObject = {
  required: false,
  serializedName: 'PhraselistUpdateObject',
  type: {
    name: 'Composite',
    className: 'PhraselistUpdateObject',
    modelProperties: {
      phrases: {
        required: false,
        serializedName: 'phrases',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      isActive: {
        required: false,
        serializedName: 'isActive',
        defaultValue: true,
        type: {
          name: 'Boolean'
        }
      },
      isExchangeable: {
        required: false,
        serializedName: 'isExchangeable',
        defaultValue: true,
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const PrebuiltDomainObject = {
  required: false,
  serializedName: 'PrebuiltDomainObject',
  type: {
    name: 'Composite',
    className: 'PrebuiltDomainObject',
    modelProperties: {
      domainName: {
        required: false,
        serializedName: 'domain_name',
        type: {
          name: 'String'
        }
      },
      modelName: {
        required: false,
        serializedName: 'model_name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const HierarchicalModel = {
  required: false,
  serializedName: 'HierarchicalModel',
  type: {
    name: 'Composite',
    className: 'HierarchicalModel',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      children: {
        required: false,
        serializedName: 'children',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      inherits: {
        required: false,
        serializedName: 'inherits',
        type: {
          name: 'Composite',
          className: 'PrebuiltDomainObject'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const ApplicationPublishObject = {
  required: false,
  serializedName: 'ApplicationPublishObject',
  type: {
    name: 'Composite',
    className: 'ApplicationPublishObject',
    modelProperties: {
      versionId: {
        required: false,
        serializedName: 'versionId',
        type: {
          name: 'String'
        }
      },
      isStaging: {
        required: false,
        serializedName: 'isStaging',
        defaultValue: false,
        type: {
          name: 'Boolean'
        }
      },
      region: {
        required: false,
        serializedName: 'region',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternAny = {
  required: false,
  serializedName: 'PatternAny',
  type: {
    name: 'Composite',
    className: 'PatternAny',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      explicitList: {
        required: false,
        serializedName: 'explicitList',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const RegexEntity = {
  required: false,
  serializedName: 'RegexEntity',
  type: {
    name: 'Composite',
    className: 'RegexEntity',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      regexPattern: {
        required: false,
        serializedName: 'regexPattern',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const PrebuiltEntity = {
  required: false,
  serializedName: 'PrebuiltEntity',
  type: {
    name: 'Composite',
    className: 'PrebuiltEntity',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const PatternRule = {
  required: false,
  serializedName: 'PatternRule',
  type: {
    name: 'Composite',
    className: 'PatternRule',
    modelProperties: {
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      intent: {
        required: false,
        serializedName: 'intent',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LuisApp = {
  required: false,
  serializedName: 'LuisApp',
  type: {
    name: 'Composite',
    className: 'LuisApp',
    modelProperties: {
      additionalProperties: {
        required: false,
        type: {
          name: 'Dictionary',
          value: {
              required: false,
              serializedName: 'ObjectElementType',
              type: {
                name: 'Object'
              }
          }
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      versionId: {
        required: false,
        serializedName: 'versionId',
        type: {
          name: 'String'
        }
      },
      desc: {
        required: false,
        serializedName: 'desc',
        type: {
          name: 'String'
        }
      },
      culture: {
        required: false,
        serializedName: 'culture',
        type: {
          name: 'String'
        }
      },
      intents: {
        required: false,
        serializedName: 'intents',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'HierarchicalModelElementType',
              type: {
                name: 'Composite',
                className: 'HierarchicalModel'
              }
          }
        }
      },
      entities: {
        required: false,
        serializedName: 'entities',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'HierarchicalModelElementType',
              type: {
                name: 'Composite',
                className: 'HierarchicalModel'
              }
          }
        }
      },
      closedLists: {
        required: false,
        serializedName: 'closedLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'ClosedListElementType',
              type: {
                name: 'Composite',
                className: 'ClosedList'
              }
          }
        }
      },
      composites: {
        required: false,
        serializedName: 'composites',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'HierarchicalModelElementType',
              type: {
                name: 'Composite',
                className: 'HierarchicalModel'
              }
          }
        }
      },
      patternAnyEntities: {
        required: false,
        serializedName: 'patternAnyEntities',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PatternAnyElementType',
              type: {
                name: 'Composite',
                className: 'PatternAny'
              }
          }
        }
      },
      regexEntities: {
        required: false,
        serializedName: 'regex_entities',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'RegexEntityElementType',
              type: {
                name: 'Composite',
                className: 'RegexEntity'
              }
          }
        }
      },
      prebuiltEntities: {
        required: false,
        serializedName: 'prebuiltEntities',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PrebuiltEntityElementType',
              type: {
                name: 'Composite',
                className: 'PrebuiltEntity'
              }
          }
        }
      },
      regexFeatures: {
        required: false,
        serializedName: 'regex_features',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'JSONRegexFeatureElementType',
              type: {
                name: 'Composite',
                className: 'JSONRegexFeature'
              }
          }
        }
      },
      modelFeatures: {
        required: false,
        serializedName: 'model_features',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'JSONModelFeatureElementType',
              type: {
                name: 'Composite',
                className: 'JSONModelFeature'
              }
          }
        }
      },
      patterns: {
        required: false,
        serializedName: 'patterns',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PatternRuleElementType',
              type: {
                name: 'Composite',
                className: 'PatternRule'
              }
          }
        }
      },
      utterances: {
        required: false,
        serializedName: 'utterances',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'JSONUtteranceElementType',
              type: {
                name: 'Composite',
                className: 'JSONUtterance'
              }
          }
        }
      }
    }
  }
};

export const EntityLabel = {
  required: false,
  serializedName: 'EntityLabel',
  type: {
    name: 'Composite',
    className: 'EntityLabel',
    modelProperties: {
      entityName: {
        required: true,
        serializedName: 'entityName',
        type: {
          name: 'String'
        }
      },
      startTokenIndex: {
        required: true,
        serializedName: 'startTokenIndex',
        type: {
          name: 'Number'
        }
      },
      endTokenIndex: {
        required: true,
        serializedName: 'endTokenIndex',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const IntentPrediction = {
  required: false,
  serializedName: 'IntentPrediction',
  type: {
    name: 'Composite',
    className: 'IntentPrediction',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      score: {
        required: false,
        serializedName: 'score',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const EntityPrediction = {
  required: false,
  serializedName: 'EntityPrediction',
  type: {
    name: 'Composite',
    className: 'EntityPrediction',
    modelProperties: {
      entityName: {
        required: true,
        serializedName: 'entityName',
        type: {
          name: 'String'
        }
      },
      startTokenIndex: {
        required: true,
        serializedName: 'startTokenIndex',
        type: {
          name: 'Number'
        }
      },
      endTokenIndex: {
        required: true,
        serializedName: 'endTokenIndex',
        type: {
          name: 'Number'
        }
      },
      phrase: {
        required: true,
        serializedName: 'phrase',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LabeledUtterance = {
  required: false,
  serializedName: 'LabeledUtterance',
  type: {
    name: 'Composite',
    className: 'LabeledUtterance',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      },
      text: {
        required: false,
        serializedName: 'text',
        type: {
          name: 'String'
        }
      },
      tokenizedText: {
        required: false,
        serializedName: 'tokenizedText',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      intentLabel: {
        required: false,
        serializedName: 'intentLabel',
        type: {
          name: 'String'
        }
      },
      entityLabels: {
        required: false,
        serializedName: 'entityLabels',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityLabelElementType',
              type: {
                name: 'Composite',
                className: 'EntityLabel'
              }
          }
        }
      },
      intentPredictions: {
        required: false,
        serializedName: 'intentPredictions',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'IntentPredictionElementType',
              type: {
                name: 'Composite',
                className: 'IntentPrediction'
              }
          }
        }
      },
      entityPredictions: {
        required: false,
        serializedName: 'entityPredictions',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityPredictionElementType',
              type: {
                name: 'Composite',
                className: 'EntityPrediction'
              }
          }
        }
      }
    }
  }
};

export const IntentsSuggestionExample = {
  required: false,
  serializedName: 'IntentsSuggestionExample',
  type: {
    name: 'Composite',
    className: 'IntentsSuggestionExample',
    modelProperties: {
      text: {
        required: false,
        serializedName: 'text',
        type: {
          name: 'String'
        }
      },
      tokenizedText: {
        required: false,
        serializedName: 'tokenizedText',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      intentPredictions: {
        required: false,
        serializedName: 'intentPredictions',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'IntentPredictionElementType',
              type: {
                name: 'Composite',
                className: 'IntentPrediction'
              }
          }
        }
      },
      entityPredictions: {
        required: false,
        serializedName: 'entityPredictions',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityPredictionElementType',
              type: {
                name: 'Composite',
                className: 'EntityPrediction'
              }
          }
        }
      }
    }
  }
};

export const EntitiesSuggestionExample = {
  required: false,
  serializedName: 'EntitiesSuggestionExample',
  type: {
    name: 'Composite',
    className: 'EntitiesSuggestionExample',
    modelProperties: {
      text: {
        required: false,
        serializedName: 'text',
        type: {
          name: 'String'
        }
      },
      tokenizedText: {
        required: false,
        serializedName: 'tokenizedText',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      intentPredictions: {
        required: false,
        serializedName: 'intentPredictions',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'IntentPredictionElementType',
              type: {
                name: 'Composite',
                className: 'IntentPrediction'
              }
          }
        }
      },
      entityPredictions: {
        required: false,
        serializedName: 'entityPredictions',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityPredictionElementType',
              type: {
                name: 'Composite',
                className: 'EntityPrediction'
              }
          }
        }
      }
    }
  }
};

export const PersonalAssistantsResponse = {
  required: false,
  serializedName: 'PersonalAssistantsResponse',
  type: {
    name: 'Composite',
    className: 'PersonalAssistantsResponse',
    modelProperties: {
      endpointKeys: {
        required: false,
        serializedName: 'endpointKeys',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      endpointUrls: {
        required: false,
        serializedName: 'endpointUrls',
        type: {
          name: 'Dictionary',
          value: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const ModelInfo = {
  required: false,
  serializedName: 'ModelInfo',
  type: {
    name: 'Composite',
    className: 'ModelInfo',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const EntityRole = {
  required: false,
  serializedName: 'EntityRole',
  type: {
    name: 'Composite',
    className: 'EntityRole',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ChildEntity = {
  required: false,
  serializedName: 'ChildEntity',
  type: {
    name: 'Composite',
    className: 'ChildEntity',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ExplicitListItem = {
  required: false,
  serializedName: 'ExplicitListItem',
  type: {
    name: 'Composite',
    className: 'ExplicitListItem',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      },
      explicitListItem: {
        required: false,
        serializedName: 'explicitListItem',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ModelInfoResponse = {
  required: false,
  serializedName: 'ModelInfoResponse',
  type: {
    name: 'Composite',
    className: 'ModelInfoResponse',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      children: {
        required: false,
        serializedName: 'children',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'ChildEntityElementType',
              type: {
                name: 'Composite',
                className: 'ChildEntity'
              }
          }
        }
      },
      subLists: {
        required: false,
        serializedName: 'subLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'SubClosedListResponseElementType',
              type: {
                name: 'Composite',
                className: 'SubClosedListResponse'
              }
          }
        }
      },
      customPrebuiltDomainName: {
        required: false,
        serializedName: 'customPrebuiltDomainName',
        type: {
          name: 'String'
        }
      },
      customPrebuiltModelName: {
        required: false,
        serializedName: 'customPrebuiltModelName',
        type: {
          name: 'String'
        }
      },
      regexPattern: {
        required: false,
        serializedName: 'regexPattern',
        type: {
          name: 'String'
        }
      },
      explicitList: {
        required: false,
        serializedName: 'explicitList',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'ExplicitListItemElementType',
              type: {
                name: 'Composite',
                className: 'ExplicitListItem'
              }
          }
        }
      }
    }
  }
};

export const EntityModelInfo = {
  required: false,
  serializedName: 'EntityModelInfo',
  type: {
    name: 'Composite',
    className: 'EntityModelInfo',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      }
    }
  }
};

export const HierarchicalEntityExtractor = {
  required: false,
  serializedName: 'Hierarchical Entity Extractor',
  type: {
    name: 'Composite',
    className: 'HierarchicalEntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      children: {
        required: false,
        serializedName: 'children',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'ChildEntityElementType',
              type: {
                name: 'Composite',
                className: 'ChildEntity'
              }
          }
        }
      }
    }
  }
};

export const CompositeEntityExtractor = {
  required: false,
  serializedName: 'Composite Entity Extractor',
  type: {
    name: 'Composite',
    className: 'CompositeEntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      children: {
        required: false,
        serializedName: 'children',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'ChildEntityElementType',
              type: {
                name: 'Composite',
                className: 'ChildEntity'
              }
          }
        }
      }
    }
  }
};

export const ClosedListEntityExtractor = {
  required: false,
  serializedName: 'Closed List Entity Extractor',
  type: {
    name: 'Composite',
    className: 'ClosedListEntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      subLists: {
        required: false,
        serializedName: 'subLists',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'SubClosedListResponseElementType',
              type: {
                name: 'Composite',
                className: 'SubClosedListResponse'
              }
          }
        }
      }
    }
  }
};

export const PrebuiltEntityExtractor = {
  required: false,
  serializedName: 'Prebuilt Entity Extractor',
  type: {
    name: 'Composite',
    className: 'PrebuiltEntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      }
    }
  }
};

export const HierarchicalChildEntity = {
  required: false,
  serializedName: 'HierarchicalChildEntity',
  type: {
    name: 'Composite',
    className: 'HierarchicalChildEntity',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: false,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const CustomPrebuiltModel = {
  required: false,
  serializedName: 'CustomPrebuiltModel',
  type: {
    name: 'Composite',
    className: 'CustomPrebuiltModel',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      customPrebuiltDomainName: {
        required: false,
        serializedName: 'customPrebuiltDomainName',
        type: {
          name: 'String'
        }
      },
      customPrebuiltModelName: {
        required: false,
        serializedName: 'customPrebuiltModelName',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      }
    }
  }
};

export const IntentClassifier = {
  required: false,
  serializedName: 'Intent Classifier',
  type: {
    name: 'Composite',
    className: 'IntentClassifier',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      customPrebuiltDomainName: {
        required: false,
        serializedName: 'customPrebuiltDomainName',
        type: {
          name: 'String'
        }
      },
      customPrebuiltModelName: {
        required: false,
        serializedName: 'customPrebuiltModelName',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const EntityExtractor = {
  required: false,
  serializedName: 'Entity Extractor',
  type: {
    name: 'Composite',
    className: 'EntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      customPrebuiltDomainName: {
        required: false,
        serializedName: 'customPrebuiltDomainName',
        type: {
          name: 'String'
        }
      },
      customPrebuiltModelName: {
        required: false,
        serializedName: 'customPrebuiltModelName',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const FeatureInfoObject = {
  required: false,
  serializedName: 'FeatureInfoObject',
  type: {
    name: 'Composite',
    className: 'FeatureInfoObject',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      isActive: {
        required: false,
        serializedName: 'isActive',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const PhraseListFeatureInfo = {
  required: false,
  serializedName: 'PhraseListFeatureInfo',
  type: {
    name: 'Composite',
    className: 'PhraseListFeatureInfo',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      isActive: {
        required: false,
        serializedName: 'isActive',
        type: {
          name: 'Boolean'
        }
      },
      phrases: {
        required: false,
        serializedName: 'phrases',
        type: {
          name: 'String'
        }
      },
      isExchangeable: {
        required: false,
        serializedName: 'isExchangeable',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const PatternFeatureInfo = {
  required: false,
  serializedName: 'PatternFeatureInfo',
  type: {
    name: 'Composite',
    className: 'PatternFeatureInfo',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      isActive: {
        required: false,
        serializedName: 'isActive',
        type: {
          name: 'Boolean'
        }
      },
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const FeaturesResponseObject = {
  required: false,
  serializedName: 'FeaturesResponseObject',
  type: {
    name: 'Composite',
    className: 'FeaturesResponseObject',
    modelProperties: {
      phraselistFeatures: {
        required: false,
        serializedName: 'phraselistFeatures',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PhraseListFeatureInfoElementType',
              type: {
                name: 'Composite',
                className: 'PhraseListFeatureInfo'
              }
          }
        }
      },
      patternFeatures: {
        required: false,
        serializedName: 'patternFeatures',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PatternFeatureInfoElementType',
              type: {
                name: 'Composite',
                className: 'PatternFeatureInfo'
              }
          }
        }
      }
    }
  }
};

export const LabelExampleResponse = {
  required: false,
  serializedName: 'LabelExampleResponse',
  type: {
    name: 'Composite',
    className: 'LabelExampleResponse',
    modelProperties: {
      utteranceText: {
        required: false,
        serializedName: 'UtteranceText',
        type: {
          name: 'String'
        }
      },
      exampleId: {
        required: false,
        serializedName: 'ExampleId',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const OperationStatus = {
  required: false,
  serializedName: 'OperationStatus',
  type: {
    name: 'Composite',
    className: 'OperationStatus',
    modelProperties: {
      code: {
        required: false,
        serializedName: 'code',
        type: {
          name: 'String'
        }
      },
      message: {
        required: false,
        serializedName: 'message',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const BatchLabelExample = {
  required: false,
  serializedName: 'BatchLabelExample',
  type: {
    name: 'Composite',
    className: 'BatchLabelExample',
    modelProperties: {
      value: {
        required: false,
        serializedName: 'value',
        type: {
          name: 'Composite',
          className: 'LabelExampleResponse'
        }
      },
      hasError: {
        required: false,
        serializedName: 'hasError',
        type: {
          name: 'Boolean'
        }
      },
      error: {
        required: false,
        serializedName: 'error',
        type: {
          name: 'Composite',
          className: 'OperationStatus'
        }
      }
    }
  }
};

export const ApplicationInfoResponse = {
  required: false,
  serializedName: 'ApplicationInfoResponse',
  type: {
    name: 'Composite',
    className: 'ApplicationInfoResponse',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      description: {
        required: false,
        serializedName: 'description',
        type: {
          name: 'String'
        }
      },
      culture: {
        required: false,
        serializedName: 'culture',
        type: {
          name: 'String'
        }
      },
      usageScenario: {
        required: false,
        serializedName: 'usageScenario',
        type: {
          name: 'String'
        }
      },
      domain: {
        required: false,
        serializedName: 'domain',
        type: {
          name: 'String'
        }
      },
      versionsCount: {
        required: false,
        serializedName: 'versionsCount',
        type: {
          name: 'Number'
        }
      },
      createdDateTime: {
        required: false,
        serializedName: 'createdDateTime',
        type: {
          name: 'String'
        }
      },
      endpoints: {
        required: false,
        serializedName: 'endpoints',
        type: {
          name: 'Object'
        }
      },
      endpointHitsCount: {
        required: false,
        serializedName: 'endpointHitsCount',
        type: {
          name: 'Number'
        }
      },
      activeVersion: {
        required: false,
        serializedName: 'activeVersion',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const EndpointInfo = {
  required: false,
  serializedName: 'EndpointInfo',
  type: {
    name: 'Composite',
    className: 'EndpointInfo',
    modelProperties: {
      versionId: {
        required: false,
        serializedName: 'versionId',
        type: {
          name: 'String'
        }
      },
      isStaging: {
        required: false,
        serializedName: 'isStaging',
        type: {
          name: 'Boolean'
        }
      },
      endpointUrl: {
        required: false,
        serializedName: 'endpointUrl',
        type: {
          name: 'String'
        }
      },
      region: {
        required: false,
        serializedName: 'region',
        type: {
          name: 'String'
        }
      },
      assignedEndpointKey: {
        required: false,
        serializedName: 'assignedEndpointKey',
        type: {
          name: 'String'
        }
      },
      endpointRegion: {
        required: false,
        serializedName: 'endpointRegion',
        type: {
          name: 'String'
        }
      },
      publishedDateTime: {
        required: false,
        serializedName: 'publishedDateTime',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ProductionOrStagingEndpointInfo = {
  required: false,
  serializedName: 'ProductionOrStagingEndpointInfo',
  type: {
    name: 'Composite',
    className: 'ProductionOrStagingEndpointInfo',
    modelProperties: {
      versionId: {
        required: false,
        serializedName: 'versionId',
        type: {
          name: 'String'
        }
      },
      isStaging: {
        required: false,
        serializedName: 'isStaging',
        type: {
          name: 'Boolean'
        }
      },
      endpointUrl: {
        required: false,
        serializedName: 'endpointUrl',
        type: {
          name: 'String'
        }
      },
      region: {
        required: false,
        serializedName: 'region',
        type: {
          name: 'String'
        }
      },
      assignedEndpointKey: {
        required: false,
        serializedName: 'assignedEndpointKey',
        type: {
          name: 'String'
        }
      },
      endpointRegion: {
        required: false,
        serializedName: 'endpointRegion',
        type: {
          name: 'String'
        }
      },
      publishedDateTime: {
        required: false,
        serializedName: 'publishedDateTime',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const AvailableCulture = {
  required: false,
  serializedName: 'AvailableCulture',
  type: {
    name: 'Composite',
    className: 'AvailableCulture',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      code: {
        required: false,
        serializedName: 'code',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ApplicationSettings = {
  required: false,
  serializedName: 'ApplicationSettings',
  type: {
    name: 'Composite',
    className: 'ApplicationSettings',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      isPublic: {
        required: true,
        serializedName: 'public',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const PublishSettings = {
  required: false,
  serializedName: 'PublishSettings',
  type: {
    name: 'Composite',
    className: 'PublishSettings',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      isSentimentAnalysisEnabled: {
        required: true,
        serializedName: 'sentimentAnalysis',
        type: {
          name: 'Boolean'
        }
      },
      isSpeechEnabled: {
        required: true,
        serializedName: 'speech',
        type: {
          name: 'Boolean'
        }
      },
      isSpellCheckerEnabled: {
        required: true,
        serializedName: 'spellChecker',
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const AvailablePrebuiltEntityModel = {
  required: false,
  serializedName: 'AvailablePrebuiltEntityModel',
  type: {
    name: 'Composite',
    className: 'AvailablePrebuiltEntityModel',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      description: {
        required: false,
        serializedName: 'description',
        type: {
          name: 'String'
        }
      },
      examples: {
        required: false,
        serializedName: 'examples',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const EnqueueTrainingResponse = {
  required: false,
  serializedName: 'EnqueueTrainingResponse',
  type: {
    name: 'Composite',
    className: 'EnqueueTrainingResponse',
    modelProperties: {
      statusId: {
        required: false,
        serializedName: 'statusId',
        type: {
          name: 'Number'
        }
      },
      status: {
        required: false,
        serializedName: 'status',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ModelTrainingDetails = {
  required: false,
  serializedName: 'ModelTrainingDetails',
  type: {
    name: 'Composite',
    className: 'ModelTrainingDetails',
    modelProperties: {
      statusId: {
        required: false,
        serializedName: 'statusId',
        type: {
          name: 'Number'
        }
      },
      status: {
        required: false,
        serializedName: 'status',
        type: {
          name: 'String'
        }
      },
      exampleCount: {
        required: false,
        serializedName: 'exampleCount',
        type: {
          name: 'Number'
        }
      },
      trainingDateTime: {
        required: false,
        serializedName: 'trainingDateTime',
        type: {
          name: 'DateTime'
        }
      },
      failureReason: {
        required: false,
        serializedName: 'failureReason',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ModelTrainingInfo = {
  required: false,
  serializedName: 'ModelTrainingInfo',
  type: {
    name: 'Composite',
    className: 'ModelTrainingInfo',
    modelProperties: {
      modelId: {
        required: false,
        serializedName: 'modelId',
        type: {
          name: 'String'
        }
      },
      details: {
        required: false,
        serializedName: 'details',
        type: {
          name: 'Composite',
          className: 'ModelTrainingDetails'
        }
      }
    }
  }
};

export const UserAccessList = {
  required: false,
  serializedName: 'UserAccessList',
  type: {
    name: 'Composite',
    className: 'UserAccessList',
    modelProperties: {
      owner: {
        required: false,
        serializedName: 'owner',
        type: {
          name: 'String'
        }
      },
      emails: {
        required: false,
        serializedName: 'emails',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const UserCollaborator = {
  required: false,
  serializedName: 'UserCollaborator',
  type: {
    name: 'Composite',
    className: 'UserCollaborator',
    modelProperties: {
      email: {
        required: false,
        serializedName: 'email',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const CollaboratorsArray = {
  required: false,
  serializedName: 'CollaboratorsArray',
  type: {
    name: 'Composite',
    className: 'CollaboratorsArray',
    modelProperties: {
      emails: {
        required: false,
        serializedName: 'emails',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const ErrorResponse = {
  required: false,
  serializedName: 'ErrorResponse',
  type: {
    name: 'Composite',
    className: 'ErrorResponse',
    modelProperties: {
      additionalProperties: {
        required: false,
        type: {
          name: 'Dictionary',
          value: {
              required: false,
              serializedName: 'ObjectElementType',
              type: {
                name: 'Object'
              }
          }
        }
      },
      errorType: {
        required: false,
        serializedName: 'errorType',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const OperationError = {
  required: false,
  serializedName: 'OperationError',
  type: {
    name: 'Composite',
    className: 'OperationError',
    modelProperties: {
      code: {
        required: false,
        serializedName: 'code',
        type: {
          name: 'String'
        }
      },
      message: {
        required: false,
        serializedName: 'message',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PrebuiltDomainItem = {
  required: false,
  serializedName: 'PrebuiltDomainItem',
  type: {
    name: 'Composite',
    className: 'PrebuiltDomainItem',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      description: {
        required: false,
        serializedName: 'description',
        type: {
          name: 'String'
        }
      },
      examples: {
        required: false,
        serializedName: 'examples',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PrebuiltDomain = {
  required: false,
  serializedName: 'PrebuiltDomain',
  type: {
    name: 'Composite',
    className: 'PrebuiltDomain',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      culture: {
        required: false,
        serializedName: 'culture',
        type: {
          name: 'String'
        }
      },
      description: {
        required: false,
        serializedName: 'description',
        type: {
          name: 'String'
        }
      },
      examples: {
        required: false,
        serializedName: 'examples',
        type: {
          name: 'String'
        }
      },
      intents: {
        required: false,
        serializedName: 'intents',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PrebuiltDomainItemElementType',
              type: {
                name: 'Composite',
                className: 'PrebuiltDomainItem'
              }
          }
        }
      },
      entities: {
        required: false,
        serializedName: 'entities',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'PrebuiltDomainItemElementType',
              type: {
                name: 'Composite',
                className: 'PrebuiltDomainItem'
              }
          }
        }
      }
    }
  }
};

export const EntityRoleCreateObject = {
  required: false,
  serializedName: 'EntityRoleCreateObject',
  type: {
    name: 'Composite',
    className: 'EntityRoleCreateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const RegexModelCreateObject = {
  required: false,
  serializedName: 'RegexModelCreateObject',
  type: {
    name: 'Composite',
    className: 'RegexModelCreateObject',
    modelProperties: {
      regexPattern: {
        required: false,
        serializedName: 'regexPattern',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternAnyModelCreateObject = {
  required: false,
  serializedName: 'PatternAnyModelCreateObject',
  type: {
    name: 'Composite',
    className: 'PatternAnyModelCreateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      explicitList: {
        required: false,
        serializedName: 'explicitList',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const ExplicitListItemCreateObject = {
  required: false,
  serializedName: 'ExplicitListItemCreateObject',
  type: {
    name: 'Composite',
    className: 'ExplicitListItemCreateObject',
    modelProperties: {
      explicitListItem: {
        required: false,
        serializedName: 'explicitListItem',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const RegexModelUpdateObject = {
  required: false,
  serializedName: 'RegexModelUpdateObject',
  type: {
    name: 'Composite',
    className: 'RegexModelUpdateObject',
    modelProperties: {
      regexPattern: {
        required: false,
        serializedName: 'regexPattern',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternAnyModelUpdateObject = {
  required: false,
  serializedName: 'PatternAnyModelUpdateObject',
  type: {
    name: 'Composite',
    className: 'PatternAnyModelUpdateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      explicitList: {
        required: false,
        serializedName: 'explicitList',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const EntityRoleUpdateObject = {
  required: false,
  serializedName: 'EntityRoleUpdateObject',
  type: {
    name: 'Composite',
    className: 'EntityRoleUpdateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ExplicitListItemUpdateObject = {
  required: false,
  serializedName: 'ExplicitListItemUpdateObject',
  type: {
    name: 'Composite',
    className: 'ExplicitListItemUpdateObject',
    modelProperties: {
      explicitListItem: {
        required: false,
        serializedName: 'explicitListItem',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternRuleCreateObject = {
  required: false,
  serializedName: 'PatternRuleCreateObject',
  type: {
    name: 'Composite',
    className: 'PatternRuleCreateObject',
    modelProperties: {
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      intent: {
        required: false,
        serializedName: 'intent',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternRuleUpdateObject = {
  required: false,
  serializedName: 'PatternRuleUpdateObject',
  type: {
    name: 'Composite',
    className: 'PatternRuleUpdateObject',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      intent: {
        required: false,
        serializedName: 'intent',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const RegexEntityExtractor = {
  required: false,
  serializedName: 'Regex Entity Extractor',
  type: {
    name: 'Composite',
    className: 'RegexEntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      regexPattern: {
        required: false,
        serializedName: 'regexPattern',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternAnyEntityExtractor = {
  required: false,
  serializedName: 'Pattern.Any Entity Extractor',
  type: {
    name: 'Composite',
    className: 'PatternAnyEntityExtractor',
    modelProperties: {
      id: {
        required: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      typeId: {
        required: false,
        serializedName: 'typeId',
        type: {
          name: 'Number'
        }
      },
      readableType: {
        required: true,
        serializedName: 'readableType',
        type: {
          name: 'String'
        }
      },
      roles: {
        required: false,
        serializedName: 'roles',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'EntityRoleElementType',
              type: {
                name: 'Composite',
                className: 'EntityRole'
              }
          }
        }
      },
      explicitList: {
        required: false,
        serializedName: 'explicitList',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'ExplicitListItemElementType',
              type: {
                name: 'Composite',
                className: 'ExplicitListItem'
              }
          }
        }
      }
    }
  }
};

export const PatternRuleInfo = {
  required: false,
  serializedName: 'PatternRuleInfo',
  type: {
    name: 'Composite',
    className: 'PatternRuleInfo',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      pattern: {
        required: false,
        serializedName: 'pattern',
        type: {
          name: 'String'
        }
      },
      intent: {
        required: false,
        serializedName: 'intent',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LabelTextObject = {
  required: false,
  serializedName: 'LabelTextObject',
  type: {
    name: 'Composite',
    className: 'LabelTextObject',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'Number'
        }
      },
      text: {
        required: false,
        serializedName: 'text',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const HierarchicalChildModelUpdateObject = {
  required: false,
  serializedName: 'hierarchicalChildModelUpdateObject',
  type: {
    name: 'Composite',
    className: 'HierarchicalChildModelUpdateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const HierarchicalChildModelCreateObject = {
  required: false,
  serializedName: 'hierarchicalChildModelCreateObject',
  type: {
    name: 'Composite',
    className: 'HierarchicalChildModelCreateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const CompositeChildModelCreateObject = {
  required: false,
  serializedName: 'compositeChildModelCreateObject',
  type: {
    name: 'Composite',
    className: 'CompositeChildModelCreateObject',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const FeaturesGetApplicationVersionPatternFeaturesOptionalParams = {
  required: false,
  serializedName: 'GetApplicationVersionPatternFeaturesOptions',
  type: {
    name: 'Composite',
    className: 'FeaturesGetApplicationVersionPatternFeaturesOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const FeaturesListPhraseListsOptionalParams = {
  required: false,
  serializedName: 'ListPhraseListsOptions',
  type: {
    name: 'Composite',
    className: 'FeaturesListPhraseListsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const FeaturesListOptionalParams = {
  required: false,
  serializedName: 'ListOptions',
  type: {
    name: 'Composite',
    className: 'FeaturesListOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const FeaturesUpdatePhraseListOptionalParams = {
  required: false,
  serializedName: 'UpdatePhraseListOptions',
  type: {
    name: 'Composite',
    className: 'FeaturesUpdatePhraseListOptionalParams',
    modelProperties: {
      phraselistUpdateObject: {
        required: false,
        serializedName: 'phraselistUpdateObject',
        type: {
          name: 'Composite',
          className: 'PhraselistUpdateObject'
        }
      }
    }
  }
};

export const ExamplesListOptionalParams = {
  required: false,
  serializedName: 'ListOptions',
  type: {
    name: 'Composite',
    className: 'ExamplesListOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListIntentsOptionalParams = {
  required: false,
  serializedName: 'ListIntentsOptions',
  type: {
    name: 'Composite',
    className: 'ModelListIntentsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListEntitiesOptionalParams = {
  required: false,
  serializedName: 'ListEntitiesOptions',
  type: {
    name: 'Composite',
    className: 'ModelListEntitiesOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListHierarchicalEntitiesOptionalParams = {
  required: false,
  serializedName: 'ListHierarchicalEntitiesOptions',
  type: {
    name: 'Composite',
    className: 'ModelListHierarchicalEntitiesOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListCompositeEntitiesOptionalParams = {
  required: false,
  serializedName: 'ListCompositeEntitiesOptions',
  type: {
    name: 'Composite',
    className: 'ModelListCompositeEntitiesOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListClosedListsOptionalParams = {
  required: false,
  serializedName: 'ListClosedListsOptions',
  type: {
    name: 'Composite',
    className: 'ModelListClosedListsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListPrebuiltsOptionalParams = {
  required: false,
  serializedName: 'ListPrebuiltsOptions',
  type: {
    name: 'Composite',
    className: 'ModelListPrebuiltsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelListModelsOptionalParams = {
  required: false,
  serializedName: 'ListModelsOptions',
  type: {
    name: 'Composite',
    className: 'ModelListModelsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelExamplesMethodOptionalParams = {
  required: false,
  serializedName: 'ExamplesMethodOptions',
  type: {
    name: 'Composite',
    className: 'ModelExamplesMethodOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelDeleteIntentOptionalParams = {
  required: false,
  serializedName: 'DeleteIntentOptions',
  type: {
    name: 'Composite',
    className: 'ModelDeleteIntentOptionalParams',
    modelProperties: {
      deleteUtterances: {
        required: false,
        serializedName: 'deleteUtterances',
        defaultValue: false,
        type: {
          name: 'Boolean'
        }
      }
    }
  }
};

export const ModelGetIntentSuggestionsOptionalParams = {
  required: false,
  serializedName: 'GetIntentSuggestionsOptions',
  type: {
    name: 'Composite',
    className: 'ModelGetIntentSuggestionsOptionalParams',
    modelProperties: {
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelGetEntitySuggestionsOptionalParams = {
  required: false,
  serializedName: 'GetEntitySuggestionsOptions',
  type: {
    name: 'Composite',
    className: 'ModelGetEntitySuggestionsOptionalParams',
    modelProperties: {
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelGetRegexEntityInfosOptionalParams = {
  required: false,
  serializedName: 'GetRegexEntityInfosOptions',
  type: {
    name: 'Composite',
    className: 'ModelGetRegexEntityInfosOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ModelGetPatternAnyEntityInfosOptionalParams = {
  required: false,
  serializedName: 'GetPatternAnyEntityInfosOptions',
  type: {
    name: 'Composite',
    className: 'ModelGetPatternAnyEntityInfosOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const AppsListOptionalParams = {
  required: false,
  serializedName: 'ListOptions',
  type: {
    name: 'Composite',
    className: 'AppsListOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const AppsImportMethodOptionalParams = {
  required: false,
  serializedName: 'ImportMethodOptions',
  type: {
    name: 'Composite',
    className: 'AppsImportMethodOptionalParams',
    modelProperties: {
      appName: {
        required: false,
        serializedName: 'appName',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const VersionsCloneOptionalParams = {
  required: false,
  serializedName: 'CloneOptions',
  type: {
    name: 'Composite',
    className: 'VersionsCloneOptionalParams',
    modelProperties: {
      versionCloneObject: {
        required: false,
        serializedName: 'versionCloneObject',
        type: {
          name: 'Composite',
          className: 'TaskUpdateObject'
        }
      }
    }
  }
};

export const VersionsListOptionalParams = {
  required: false,
  serializedName: 'ListOptions',
  type: {
    name: 'Composite',
    className: 'VersionsListOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const VersionsImportMethodOptionalParams = {
  required: false,
  serializedName: 'ImportMethodOptions',
  type: {
    name: 'Composite',
    className: 'VersionsImportMethodOptionalParams',
    modelProperties: {
      versionId: {
        required: false,
        serializedName: 'versionId',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const PatternGetPatternsOptionalParams = {
  required: false,
  serializedName: 'GetPatternsOptions',
  type: {
    name: 'Composite',
    className: 'PatternGetPatternsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const PatternGetIntentPatternsOptionalParams = {
  required: false,
  serializedName: 'GetIntentPatternsOptions',
  type: {
    name: 'Composite',
    className: 'PatternGetIntentPatternsOptionalParams',
    modelProperties: {
      skip: {
        required: false,
        serializedName: 'skip',
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      take: {
        required: false,
        serializedName: 'take',
        defaultValue: 100,
        constraints: {
          InclusiveMaximum: 500,
          InclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      }
    }
  }
};
